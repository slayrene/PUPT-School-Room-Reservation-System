package ReservationSystem;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 * ManageStudents class represents a GUI window for managing students.
 * It extends javax.swing.JFrame and provides functionality to view and manage student details.
 */
public class ManageStudents extends javax.swing.JFrame {
    private User user;
    private JFrame previousFrame; 
    Students students = new Students();
    Register register = new Register();
    /**
     * Creates new form ManageStudents with default settings.
     * Initializes the components and sets the location of the frame to the center of the screen.
     */     
    public ManageStudents() {
        initComponents();
        this.setLocationRelativeTo(null);    
    }
    /**
     * Creates new form ManageStudents with specified user and previous frame.
     * Initializes the components, sets the user, previous frame, and fills the student table with data.
     * @param user          the user object representing the currently logged-in user
     * @param previousFrame the JFrame object representing the previous frame
     */
    ManageStudents(User user, JFrame previousFrame) {
    //    throw new UnsupportedOperationException("Not supported yet.");
        initComponents();
        this.user = user;
        this.previousFrame = previousFrame;
        username.setText(user.getUsername());
        students.fillStudentTable(studentsTable);      
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textstudno = new javax.swing.JTextField();
        textfname = new javax.swing.JTextField();
        textmname = new javax.swing.JTextField();
        textlname = new javax.swing.JTextField();
        textyrsec = new javax.swing.JTextField();
        textemail = new javax.swing.JTextField();
        textpassword = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        addStudentBTN = new javax.swing.JButton();
        editStudentBTN = new javax.swing.JButton();
        removeStudentBTN = new javax.swing.JButton();
        fnameLabel = new javax.swing.JLabel();
        clearBTN = new javax.swing.JButton();
        mnameLabel = new javax.swing.JLabel();
        lnameLabel = new javax.swing.JLabel();
        yrsecLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentsTable = new javax.swing.JTable();
        refreshBTN = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        username = new javax.swing.JLabel();
        prof = new javax.swing.JLabel();
        manageStudentsButton = new javax.swing.JButton();
        manageRoomButton = new javax.swing.JButton();
        manageReservationButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(125, 10, 10));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 174, 69));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textstudno.setBackground(new java.awt.Color(255, 174, 69));
        textstudno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textstudno, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 237, 27));

        textfname.setBackground(new java.awt.Color(255, 174, 69));
        textfname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 237, 26));

        textmname.setBackground(new java.awt.Color(255, 174, 69));
        textmname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textmname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 237, 26));

        textlname.setBackground(new java.awt.Color(255, 174, 69));
        textlname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textlname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 237, 27));

        textyrsec.setBackground(new java.awt.Color(255, 174, 69));
        textyrsec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textyrsec, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 237, 30));

        textemail.setBackground(new java.awt.Color(255, 174, 69));
        textemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 237, 30));

        textpassword.setBackground(new java.awt.Color(255, 174, 69));
        textpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
        jPanel2.add(textpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 237, 30));

        idLabel.setText("Student Number:");
        jPanel2.add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        addStudentBTN.setBackground(new java.awt.Color(255, 143, 44));
        addStudentBTN.setText("Add");
        addStudentBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 6, 1)));
        addStudentBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addStudentBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentBTNActionPerformed(evt);
            }
        });
        jPanel2.add(addStudentBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, 30));

        editStudentBTN.setBackground(new java.awt.Color(255, 143, 44));
        editStudentBTN.setText("Edit");
        editStudentBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 6, 1)));
        editStudentBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editStudentBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentBTNActionPerformed(evt);
            }
        });
        jPanel2.add(editStudentBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 100, 30));

        removeStudentBTN.setBackground(new java.awt.Color(255, 143, 44));
        removeStudentBTN.setText("Remove");
        removeStudentBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 6, 1)));
        removeStudentBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeStudentBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentBTNActionPerformed(evt);
            }
        });
        jPanel2.add(removeStudentBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 109, 30));

        fnameLabel.setText("First name:");
        jPanel2.add(fnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        clearBTN.setBackground(new java.awt.Color(255, 143, 44));
        clearBTN.setText("Clear Fields");
        clearBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 6, 1)));
        clearBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });
        jPanel2.add(clearBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 340, 30));

        mnameLabel.setText("Middle name:");
        jPanel2.add(mnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        lnameLabel.setText("Last name:");
        jPanel2.add(lnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        yrsecLabel.setText("Year and Section:");
        jPanel2.add(yrsecLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        emailLabel.setText("Email:");
        jPanel2.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        passwordLabel.setText("Password:");
        jPanel2.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        studentsTable.setBackground(new java.awt.Color(249, 214, 137));
        studentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First name", "Middle name", "Last name", "Year and Section", "Email", "Password"
            }
        )

        {public boolean isCellEditable(int row, int column) {
            return false;
        }}

    );
    studentsTable.setSelectionBackground(new java.awt.Color(125, 10, 10));
    studentsTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
    studentsTable.getTableHeader().setReorderingAllowed(false);
    studentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            studentsTableMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(studentsTable);

    jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 57, 442, 376));

    refreshBTN.setBackground(new java.awt.Color(255, 143, 44));
    refreshBTN.setText("Refresh");
    refreshBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(92, 6, 1)));
    refreshBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    refreshBTN.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshBTNActionPerformed(evt);
        }
    });
    jPanel2.add(refreshBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 449, 440, 30));

    searchField.setBackground(new java.awt.Color(255, 174, 69));
    searchField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 10, 10)));
    searchField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchFieldActionPerformed(evt);
        }
    });
    searchField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            searchFieldKeyReleased(evt);
        }
    });
    jPanel2.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 18, 118, 27));

    searchLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    searchLabel.setText("Search:");
    jPanel2.add(searchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(534, 23, -1, -1));

    jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 89, 890, 530));

    backButton.setBackground(new java.awt.Color(255, 174, 69));
    backButton.setForeground(new java.awt.Color(0, 0, 51));
    backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/backkk.png"))); // NOI18N
    backButton.setBorder(null);
    backButton.setBorderPainted(false);
    backButton.setContentAreaFilled(false);
    backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    backButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButtonActionPerformed(evt);
        }
    });
    jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 22, 42, -1));

    jPanel3.setBackground(new java.awt.Color(92, 6, 1));
    jPanel3.setPreferredSize(new java.awt.Dimension(150, 620));
    jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    logout.setBackground(new java.awt.Color(125, 10, 10));
    logout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    logout.setForeground(new java.awt.Color(254, 221, 11));
    logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
    logout.setText("Logout");
    logout.setBorder(null);
    logout.setBorderPainted(false);
    logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    logout.setFocusPainted(false);
    logout.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            logoutActionPerformed(evt);
        }
    });
    jPanel3.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 525, 150, 51));

    username.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    username.setForeground(new java.awt.Color(254, 221, 11));
    username.setText("0");
    jPanel3.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 60, -1));

    prof.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/prof.png"))); // NOI18N
    jPanel3.add(prof, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 422, -1, -1));

    manageStudentsButton.setBackground(new java.awt.Color(125, 10, 10));
    manageStudentsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    manageStudentsButton.setForeground(new java.awt.Color(254, 221, 11));
    manageStudentsButton.setText("Manage Students");
    manageStudentsButton.setBorder(null);
    manageStudentsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    manageStudentsButton.setPreferredSize(new java.awt.Dimension(93, 35));
    manageStudentsButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            manageStudentsButtonActionPerformed(evt);
        }
    });
    jPanel3.add(manageStudentsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 143, 150, 43));

    manageRoomButton.setBackground(new java.awt.Color(125, 10, 10));
    manageRoomButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    manageRoomButton.setForeground(new java.awt.Color(254, 221, 11));
    manageRoomButton.setText("Manage Rooms");
    manageRoomButton.setBorder(null);
    manageRoomButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    manageRoomButton.setPreferredSize(new java.awt.Dimension(93, 35));
    manageRoomButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            manageRoomButtonActionPerformed(evt);
        }
    });
    jPanel3.add(manageRoomButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 192, 150, 45));

    manageReservationButton.setBackground(new java.awt.Color(125, 10, 10));
    manageReservationButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    manageReservationButton.setForeground(new java.awt.Color(254, 221, 11));
    manageReservationButton.setText("Manage Reservations");
    manageReservationButton.setBorder(null);
    manageReservationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    manageReservationButton.setPreferredSize(new java.awt.Dimension(93, 35));
    manageReservationButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            manageReservationButtonActionPerformed(evt);
        }
    });
    jPanel3.add(manageReservationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 243, 150, 45));

    homeButton.setBackground(new java.awt.Color(255, 174, 69));
    homeButton.setForeground(new java.awt.Color(0, 0, 51));
    homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Home.png"))); // NOI18N
    homeButton.setBorder(null);
    homeButton.setBorderPainted(false);
    homeButton.setContentAreaFilled(false);
    homeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    homeButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            homeButtonActionPerformed(evt);
        }
    });
    jPanel3.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 70, -1));

    jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 619));

    title.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
    title.setForeground(new java.awt.Color(254, 221, 11));
    title.setText("      MANAGE STUDENTS");
    title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 221, 11), 2));
    title.setPreferredSize(new java.awt.Dimension(150, 50));
    jPanel1.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 15, 223, -1));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Validates user input for adding a new student and adds the student information to the system.
     * @param evt the ActionEvent object 
     */ 
    private void addStudentBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentBTNActionPerformed
    
        if ("".equals(textstudno.getText())){
            jOptionPane1.showMessageDialog(this, "Student Number is required");
        } else if (!register.isValidStudentNumber(textstudno.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid student number format!", "Invalid", jOptionPane1.ERROR_MESSAGE);             
        } else if ("".equals(textfname.getText())){
            jOptionPane1.showMessageDialog(this, "First Name is required");
        } else if (!register.isValidName(textfname.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid name format!", "Invalid", jOptionPane1.ERROR_MESSAGE);            
        } else if ("".equals(textmname.getText())){
            jOptionPane1.showMessageDialog(this, "Middle Name is required");  
        } else if (!register.isValidName(textmname.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid name format!", "Invalid", jOptionPane1.ERROR_MESSAGE);              
        } else if ("".equals(textlname.getText())){
            jOptionPane1.showMessageDialog(this, "Last Name is required"); 
        } else if (!register.isValidName(textlname.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid name format!", "Invalid", jOptionPane1.ERROR_MESSAGE);              
        } else if ("".equals(textyrsec.getText())){
            jOptionPane1.showMessageDialog(this, "Year and Section is required");                
        } else if ("".equals(textemail.getText())){
            jOptionPane1.showMessageDialog(this, "Email is required");   
        } else if (!register.isValidEmail(textemail.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid email format!", "Invalid", jOptionPane1.ERROR_MESSAGE);              
        } else if ("".equals(textpassword.getText())){
            jOptionPane1.showMessageDialog(this, "Password is required"); 
        } else {       
            String studno = textstudno.getText();   
            String fname = textfname.getText();
            String lname = textlname.getText();
            String mname = textmname.getText();
            String yrsec = textyrsec.getText();
            String email = textemail.getText();
            String password = textpassword.getText();
       
            if (students.addStudents(studno, fname, mname, lname, yrsec, email, password)) 
            {
                jOptionPane1.showMessageDialog(rootPane, "Successfully added a new student!", "Add student", jOptionPane1.INFORMATION_MESSAGE);
            } else {
                jOptionPane1.showMessageDialog(rootPane, "Failed to add a new student", "Add student", jOptionPane1.ERROR_MESSAGE);   
            }
        
        }
    }//GEN-LAST:event_addStudentBTNActionPerformed
    /**
     * Populates the text fields with the selected student information from the student table.
     * @param evt the MouseEvent object 
     */ 
    private void studentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)studentsTable.getModel();
        
        int rIndex = studentsTable.getSelectedRow();
        
        textstudno.setText(model.getValueAt(rIndex, 0).toString());
        textfname.setText(model.getValueAt(rIndex, 1).toString());
        textlname.setText(model.getValueAt(rIndex, 2).toString());
        textmname.setText(model.getValueAt(rIndex, 3).toString());
        textyrsec.setText(model.getValueAt(rIndex, 4).toString());
        textemail.setText(model.getValueAt(rIndex, 5).toString());
        textpassword.setText(model.getValueAt(rIndex, 6).toString());
        
    }//GEN-LAST:event_studentsTableMouseClicked
    /**
     * Validates user input for editing a student and updates the student information in the system.
     * @param evt the ActionEvent object 
     */ 
    private void editStudentBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStudentBTNActionPerformed
     
        if ("".equals(textstudno.getText())){
            jOptionPane1.showMessageDialog(this, "Student Number is required");
        } else if (!register.isValidStudentNumber(textstudno.getText())) {
            jOptionPane1.showMessageDialog(rootPane, "Invalid student number format!", "Invalid", jOptionPane1.ERROR_MESSAGE);                
        } else if ("".equals(textfname.getText())){
            jOptionPane1.showMessageDialog(this, "First Name is required");
        } else if ("".equals(textmname.getText())){
            jOptionPane1.showMessageDialog(this, "Middle Name is required");       
        } else if ("".equals(textlname.getText())){
            jOptionPane1.showMessageDialog(this, "Last Name is required");                
        } else if ("".equals(textyrsec.getText())){
            jOptionPane1.showMessageDialog(this, "Year and Section is required");                
        } else if ("".equals(textemail.getText())){
            jOptionPane1.showMessageDialog(this, "Email is required");                
        } else if ("".equals(textpassword.getText())){
            jOptionPane1.showMessageDialog(this, "Password is required"); 
        } else {       
            String studno = textstudno.getText();   
            String fname = textfname.getText();
            String lname = textlname.getText();
            String mname = textmname.getText();
            String yrsec = textyrsec.getText();
            String email = textemail.getText();
            String password = textpassword.getText();
       
            if (students.editStudent(studno, fname, mname, lname, yrsec, email, password)) 
            {
                jOptionPane1.showMessageDialog(rootPane, "Successfully edited student data!", "Edit student", jOptionPane1.INFORMATION_MESSAGE);
            } else {
                jOptionPane1.showMessageDialog(rootPane, "Failed to edit student data", "Edit student", jOptionPane1.ERROR_MESSAGE);   
            }
        
        }        
        
    }//GEN-LAST:event_editStudentBTNActionPerformed
  /**
   * Prompts the user for confirmation before deleting a student data. If confirmed, removes the student record 
   * from the system and displays a success/failure message.
   * 
   * @param evt The ActionEvent object.
   */
    private void removeStudentBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentBTNActionPerformed
        int a = jOptionPane1.showConfirmDialog(null, "Are you sure you want to delete a student record?", "Select", jOptionPane1.YES_NO_OPTION);
        if (a == 0) {
            String studno = textstudno.getText();  

            if (students.removeStudent(studno)) 
            {
                jOptionPane1.showMessageDialog(rootPane, "Successfully deleted student data!", "Delete student", jOptionPane1.INFORMATION_MESSAGE);
            } 
            else 
            {
                jOptionPane1.showMessageDialog(rootPane, "Failed to delete student data", "Delete student", jOptionPane1.ERROR_MESSAGE);   
            }           
        } else {
           
        }             
    }//GEN-LAST:event_removeStudentBTNActionPerformed
  /**
   * Clears all students data input fields 
   * 
   * @param evt The ActionEvent object.
   */
    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        textstudno.setText("");
        textfname.setText("");
        textlname.setText("");
        textmname.setText("");
        textyrsec.setText("");
        textemail.setText("");
        textpassword.setText("");
    }//GEN-LAST:event_clearBTNActionPerformed
  /**
   * Refreshes the room table by clearing the existing data model and then calling 
   * the `room.fillStudentsTable` method to populate the table with fresh data.
   * 
   * @param evt The ActionEvent object.
   */
    private void refreshBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBTNActionPerformed
        
        studentsTable.setModel(new DefaultTableModel(null, new Object[]{"ID","First name","Middle name","Last name","Year & Section","Email","Password"}));
        
        students.fillStudentTable(studentsTable);
    }//GEN-LAST:event_refreshBTNActionPerformed
  /**
   * Closes the current frame and shows the previous frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        previousFrame.setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_backButtonActionPerformed
  /**
   * Placeholder for handling actions triggered when the user presses Enter in the search field.
   * 
   * @param evt The ActionEvent object.
   */
    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        DefaultTableModel obj = (DefaultTableModel) studentsTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter(obj);
        studentsTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(searchField.getText()));
    }//GEN-LAST:event_searchFieldKeyReleased
  /**
   * Prompts the user for confirmation before logging out. If confirmed, creates a new instance 
   * of the MainPage class, sets it visible, and disposes of the current frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
       int a = jOptionPane1.showConfirmDialog(null, "Are you sure you want to logout?", "Select", jOptionPane1.YES_NO_OPTION);
       if (a == 0) {
            MainPage mainFrame = new MainPage ();

            mainFrame.setVisible(true);
            mainFrame.pack();
            mainFrame.setLocationRelativeTo(null);
            this.dispose();         
       } else {
           
       } 
    }//GEN-LAST:event_logoutActionPerformed
  /**
   * Opens the ManageStudents frame for managing student data. Passes the current user object 
   * and a reference to this frame to the new frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void manageStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageStudentsButtonActionPerformed
        ManageStudents manageStudentsFrame = new ManageStudents (user, this);

        manageStudentsFrame.setVisible(true);
        manageStudentsFrame.pack();
        manageStudentsFrame.setLocationRelativeTo(null);
        this.setVisible(false);   
    }//GEN-LAST:event_manageStudentsButtonActionPerformed
 /**
   * Opens the ManageRoom frame for managing rooms data. Passes the current user object 
   * and a reference to this frame to the new frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void manageRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageRoomButtonActionPerformed
        ManageRoom manageRoomFrame = new ManageRoom (user, this);

        manageRoomFrame.setVisible(true);
        manageRoomFrame.pack();
        manageRoomFrame.setLocationRelativeTo(null);
        this.setVisible(false);   
    }//GEN-LAST:event_manageRoomButtonActionPerformed
 /**
   * Opens the ManageReservations frame for managing reservations data. Passes the current user object 
   * and a reference to this frame to the new frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void manageReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageReservationButtonActionPerformed
        ManageReservations manageReservationsFrame = new ManageReservations (user, this);

        manageReservationsFrame.setVisible(true);
        manageReservationsFrame.pack();
        manageReservationsFrame.setLocationRelativeTo(null);
        this.setVisible(false);   
    }//GEN-LAST:event_manageReservationButtonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed
  /**
   * Opens the AdminHomePage frame, passing the current user object and a reference to this 
   * frame to the new frame.
   * 
   * @param evt The ActionEvent object.
   */
    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        AdminHomePage adminHomePageFrame = new AdminHomePage(user, this);

        adminHomePageFrame.setVisible(true);
        adminHomePageFrame.pack();
        adminHomePageFrame.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_homeButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStudents  ().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentBTN;
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearBTN;
    private javax.swing.JButton editStudentBTN;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel fnameLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lnameLabel;
    private javax.swing.JButton logout;
    private javax.swing.JButton manageReservationButton;
    private javax.swing.JButton manageRoomButton;
    private javax.swing.JButton manageStudentsButton;
    private javax.swing.JLabel mnameLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel prof;
    private javax.swing.JButton refreshBTN;
    private javax.swing.JButton removeStudentBTN;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable studentsTable;
    private javax.swing.JTextField textemail;
    private javax.swing.JTextField textfname;
    private javax.swing.JTextField textlname;
    private javax.swing.JTextField textmname;
    private javax.swing.JTextField textpassword;
    private javax.swing.JTextField textstudno;
    private javax.swing.JTextField textyrsec;
    private javax.swing.JLabel title;
    private javax.swing.JLabel username;
    private javax.swing.JLabel yrsecLabel;
    // End of variables declaration//GEN-END:variables
}
